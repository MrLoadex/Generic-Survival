@startuml

class UIManager {
    - playerHealthBar : Image
    - deathPanel : GameObject
    + RevivePlayer() : void
    + replyPlayerHealthUpdate(actual: float, max: float) : void
    + replyPlayerDeath() : void
    + replyPlayerRevive() : void
    + replyPlayerStatsUpdate(thirst: float, hunger: float, fatigue: float) : void
}

class PlayerLife {
    - defeated : bool
    - canBeHealed : bool
    + Heal(amount: float) : void
    + replyPlayerRevive() : void
    + updateHealthBar(currentLife: float, maxLife: float) : void
    + characterDefeated() : void
}

class LifeBase {
    - initialLife : float
    - maxLife : float
    + takeDamage(count: float) : void
    + updateHealthBar(currentLife: float, maxLife: float) : void
    + characterDefeated() : void
}

class PlayerMovementController {
    - walkSpeed : float
    - runSpeed : float
    - mouseSensitivity : float
    - jumpForce : float
    + ProcessMovement() : void
    + ProcessRotation() : void
    + replyPlayerDeath() : void
    + replyPlayerRevive() : void
    + replyPlayerExhausted() : void
    + replyPlayerEnergized() : void
}

class PlayerEvents {
    + HealtUpdate : Action<float, float>
    + Death : Action
    + Revive : Action
    + StatsUpdate : Action<float, float, float>
    + Run : Action
    + TakeDamage : Action<float>
    + Heal : Action<float>
    + Exhausted : Action
    + Rested : Action
    + Drink : Action<float>
    + Eat : Action<float>
    + Rest : Action<float>
}

class PlayerStats {
    - thirst : float
    - hunger : float
    - fatigue : float
    + Drink(amount: float) : void
    + Eat(amount: float) : void
    + Rest(amount: float) : void
    + replyRevive() : void
    + replyPlayerRun() : void
    + replyDrink(amount: float) : void
    + replyEat(amount: float) : void
    + replyRest(amount: float) : void
    + replyHealthUpdate(health: float, maxHealth: float) : void
}

PlayerLife --|> LifeBase
PlayerLife --> PlayerEvents
UIManager --> PlayerEvents
PlayerMovementController --> PlayerEvents
PlayerStats --> PlayerEvents

@enduml
